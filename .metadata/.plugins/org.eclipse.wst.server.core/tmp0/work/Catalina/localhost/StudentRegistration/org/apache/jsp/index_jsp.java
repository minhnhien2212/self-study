/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.78
 * Generated at: 2022-11-22 08:57:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

if (request.getParameter("submit") != null) {
	String name = request.getParameter("name");
	String course = request.getParameter("course");
	String fee = request.getParameter("fee");
	
	Connection con;
	PreparedStatement pst;
	ResultSet rs;
	
	Class.forName("com.mysql.jdbc.Driver");
	con = DriverManager.getConnection("jdbc:mysql://localhost/students", "root", "");
	pst = con.prepareStatement("Insert into records(name, course, fee) values (?,?,?)"); 
	pst.setString(1, name);
	pst.setString(2, course);
	pst.setString(3, fee);
	pst.executeUpdate();


      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("		alert(\"Record Added.\");\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");

}

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi\" crossorigin=\"anonymous\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js\" integrity=\"sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.min.js\" integrity=\"sha384-IDwe1+LCz02ROU9k972gdyvl+AESN10+x7tBKgc9I5HFtuNz0wWnPclzo6p9vxnk\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<h1>Student Registration System</h1>\r\n");
      out.write("	\r\n");
      out.write("	<div class=\"row\">\r\n");
      out.write("		<div class=\"col-sm-4\">\r\n");
      out.write("			<form action=\"#\" method=\"POST\">\r\n");
      out.write("			\r\n");
      out.write("				<div align=\"left\">\r\n");
      out.write("					<label class=\"form-label\">Student Name</label>\r\n");
      out.write("					<input type=\"text\" class=\"form-control\" placeholder=\"Student Name\" name=\"name\" id=\"name\" required>\r\n");
      out.write("				</div>\r\n");
      out.write("				\r\n");
      out.write("				<div align=\"left\">\r\n");
      out.write("					<label class=\"form-label\">Course Name</label>\r\n");
      out.write("					<input type=\"text\" class=\"form-control\" placeholder=\"Course Name\" name=\"course\" id=\"course\" required>\r\n");
      out.write("				</div>\r\n");
      out.write("				\r\n");
      out.write("				<div align=\"left\">\r\n");
      out.write("					<label class=\"form-label\">Fee</label>\r\n");
      out.write("					<input type=\"text\" class=\"form-control\" placeholder=\"Fee\" name=\"fee\" id=\"fee\" required>\r\n");
      out.write("				</div>\r\n");
      out.write("				<br>\r\n");
      out.write("				<div align=\"left\">\r\n");
      out.write("					<input type=\"submit\" id=\"submit\" value=\"submit\" name=\"submit\" class=\"btn btn-info\">\r\n");
      out.write("					<input type=\"reset\" id=\"reset\" value=\"reset\" name=\"reset\" class=\"btn btn-warning\">\r\n");
      out.write("					\r\n");
      out.write("				</div>\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		<div class=\"col-sm-8\">\r\n");
      out.write("			<div class=\"panel-body\">\r\n");
      out.write("				<table id=\"tbl-student\" class=\"table table-responsive table-bordered\" cellpadding=\"0\" width=\"100%\">\r\n");
      out.write("					<thead>\r\n");
      out.write("						<tr>\r\n");
      out.write("							<th>Student Name</th>\r\n");
      out.write("							<th>Course<th>\r\n");
      out.write("							<th>Fee</th>\r\n");
      out.write("							<th>Edit</th>\r\n");
      out.write("							<th>Delete</th>\r\n");
      out.write("						</tr>\r\n");
      out.write("						");

							Connection con;
							PreparedStatement pst;
							ResultSet rs;
							
							Class.forName("com.mysql.jdbc.Driver");
							con = DriverManager.getConnection("jdbc:mysql://localhost/students", "root", "");
							
							String query = "select * from records";
							Statement st = con.createStatement();
							rs = st.executeQuery(query);
							
							while (rs.next()) {
								String id = rs.getString("id");
						
      out.write("\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td> ");
      out.print(rs.getString("name") );
      out.write(" </td>\r\n");
      out.write("							<td> ");
      out.print(rs.getString("course") );
      out.write(" </td>\r\n");
      out.write("							<td> ");
      out.print(rs.getString("fee") );
      out.write(" </td>\r\n");
      out.write("							<td>Edit</td>\r\n");
      out.write("							<td>Delete</td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						\r\n");
      out.write("						");
 } 
      out.write("\r\n");
      out.write("						\r\n");
      out.write("				\r\n");
      out.write("				</table>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
